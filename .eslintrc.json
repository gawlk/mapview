{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "airbnb-base/legacy",
    "eslint:recommended",
    "plugin:vue/vue3-essential",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:sonarjs/recommended",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": true,
    "tsconfigRootDir": "src/"
  },
  "plugins": ["vue", "@typescript-eslint", "sonarjs"],
  "ignorePatterns": [
    "/src/shims-vue.d.ts",
    "vite.config.js",
    "prettier.config.js",
    "tailwind.config.js"
  ],
  "rules": {
    "no-duplicate-imports": "error",
    "no-useless-rename": "error",
    "object-shorthand": "error",
    "no-param-reassign": "off",
    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
    "default-case": "off",
    "no-control-regex": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "consistent-return": "off",
    "sonarjs/no-small-switch": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "no-use-before-define": "off",
    "no-unused-expressions": [
      "error",
      { "allowShortCircuit": true, "allowTernary": true }
    ],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": {
          "arguments": false
        }
      }
    ],
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": ["variable"],
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": ["parameter"],
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": ["function"],
        "format": ["camelCase"]
      },
      {
        "selector": ["interface", "typeAlias", "enum"],
        "format": ["PascalCase"]
      }
    ],
    "no-loop-func": "off"
  }
}
