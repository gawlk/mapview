
classDiagram
class MenuProp {
  <<interface>>
  name string
  icon any
  component any
  needsReport? boolean
  openedOnMobile? boolean
}


class Color {
  <<type>>
  | 'black'| 'white'| 'gray'| 'red'| 'orange'| 'amber'| 'yellow'| 'lime'| 'green'| 'emerald'| 'teal'| 'cyan'| 'sky'| 'blue'| 'indigo'| 'violet'| 'purple'| 'fuchsia'| 'pink'| 'rose'
}


class MathNumberObject {
  <<interface>>
  [key: string] MathNumber | MathNumber[] | MathNumber[][]
}
MathNumberObject --> MathNumber

class ComputedData {
  <<interface>>
  raw MathNumberObject
  parameters MathNumberObject
  computed MathNumberObject
  compute () => void
}
ComputedData --> MathNumberObject
ComputedData --> MathNumberObject
ComputedData --> MathNumberObject

class BaseDrop {
  <<interface>>
  data ComputedData
  additionnalFields MachineField[]
}
BaseDrop --> ComputedData
BaseDrop --> MachineField

class JSONDrop {
  <<interface>>

}


class BaseField {
  <<interface>>
  label string
  value | boolean| number| string| SlidableNumber| DateValue| LongString| SelectableString
}
BaseField --> SlidableNumber
BaseField --> DateValue
BaseField --> LongString
BaseField --> SelectableString

class JSONField {
  <<interface>>
  label string
  value boolean | number | string
}


class SlidableNumber {
  <<interface>>
  kind 'slidableNumber'
  value number
  step number
  min number
  max number
}


class DateValue {
  <<interface>>
  kind 'date'
  value string
}


class LongString {
  <<interface>>
  kind 'longString'
  value string
}


class SelectableString {
  <<interface>>
  kind 'selectableString'
  value string
  possibleValues string[]
  strict boolean
}


class HeavydynField {
  <<interface>>

}


class MaxidynField {
  <<interface>>

}


class MinidynField {
  <<interface>>

}


class MachineField {
  <<type>>
  HeavydynField | MaxidynField | MinidynField
}
MachineField --> HeavydynField
MachineField --> MaxidynField
MachineField --> MinidynField

class Icon {
  <<interface>>
  element HTMLElement
  color string
  setText (text: string) => void
  setIcon (iconName: IconName) => void
}


class IconName {
  <<type>>
  | 'circle'| 'triangle'| 'square'| 'rhombus'| 'flare'| 'pentagon'| 'hexagon'| 'hexagonAlt'| 'heptagon'| 'octagon'
}


class Image {
  <<interface>>
  id string
  sourceData mapboxgl.ImageSourceRaw
  markerNW mapboxgl.Marker
  markerSE mapboxgl.Marker
  opacity number
  addToMap (isVisible: boolean) => void
  remove () => void
}


class JSONImage {
  <<interface>>
  name string
  opacity? number
  coordinates? #123; nw: LngLatse: LngLat #125;
}
JSONImage --> LngLat

class ImageCoordinates {
  <<interface>>
  tl XYCoord
  tr XYCoord
  bl XYCoord
  br XYCoord
}
ImageCoordinates --> XYCoord
ImageCoordinates --> XYCoord
ImageCoordinates --> XYCoord
ImageCoordinates --> XYCoord

class Line {
  <<interface>>
  addToMap () => void
  update () => void
  remove () => void
}


class MathNumber {
  <<interface>>
  value math.Unit | number
  unit MathUnit | string
  displayString string
  displayStringWithUnit string
  toDisplayedValue () => void
}
MathNumber --> MathUnit

class MathUnit {
  <<interface>>
  name string
  currentUnit string
  currentPrecision number
  possibleSettings [string, number][]
  possiblePrecisions number[]
  minDisplayedValue? number
  maxDisplayedValue? number
  thresholds? #123; selected: PredefinedThreshold | CustomThreshold | nulllist: PredefinedThreshold[]// custom: CustomThreshold #125;
}
MathUnit --> PredefinedThreshold
MathUnit --> CustomThreshold

class BasePoint {
  <<interface>>
  machine MachineName
  number number
  marker mapboxgl.Marker
  icon Icon
  settings JSONPointSettings
  zone Zone | null
  updateText () => void
  updateVisibility () => void
  addToMap () => void
  remove () => void
}
BasePoint --> MachineName
BasePoint --> Icon
BasePoint --> JSONPointSettings
BasePoint --> Zone

class BasePointCreatorParameters {
  <<interface>>
  machine MachineName
}
BasePointCreatorParameters --> MachineName

class JSONPoint {
  <<interface>>
  coordinates mapboxgl.LngLatLike
  settings JSONPointSettings
  informations JSONField[]
  drops JSONDrop[]
}
JSONPoint --> JSONPointSettings
JSONPoint --> JSONField
JSONPoint --> JSONDrop

class JSONPointSettings {
  <<interface>>
  isVisible boolean
}


class HeavydynPoint {
  <<interface>>
  machine 'heavydyn'
}


class MaxidynPoint {
  <<interface>>
  machine 'maxidyn'
}


class MinidynPoint {
  <<interface>>
  machine 'minidyn'
}


class MachinePoint {
  <<type>>
  HeavydynPoint | MaxidynPoint | MinidynPoint
}
MachinePoint --> HeavydynPoint
MachinePoint --> MaxidynPoint
MachinePoint --> MinidynPoint

class PartialMachinePoint {
  <<type>>
  PartialExtendedObject<BasePoint, MachinePoint>
}
PartialMachinePoint --> PartialExtendedObject
PartialMachinePoint --> BasePoint
PartialMachinePoint --> MachinePoint

class MachinePointCreatorParameters {
  <<interface>>
  number number
  iconName IconName
  projectSettings JSONProjectSettings
  reportSettings JSONReportSettings
}
MachinePointCreatorParameters --> IconName
MachinePointCreatorParameters --> JSONProjectSettings
MachinePointCreatorParameters --> JSONReportSettings

class BaseProject {
  <<interface>>
  machine MachineName
  name MachineField
  informations MachineField[]
  reports SelectableList<MachineReport>
  units MachineUnits
  settings JSONProjectSettings
  images Image[]
  refreshLinesAndImages () => void
  setMapStyle (styleIndex: number) => void
  fitOnMap () => void
  addToMap () => void
  remove () => void
}
BaseProject --> MachineName
BaseProject --> MachineField
BaseProject --> MachineField
BaseProject --> SelectableList
BaseProject --> MachineReport
BaseProject --> MachineUnits
BaseProject --> JSONProjectSettings
BaseProject --> Image

class BaseProjectCreatorParameters {
  <<interface>>
  machine MachineName
  units MachineUnits
}
BaseProjectCreatorParameters --> MachineName
BaseProjectCreatorParameters --> MachineUnits

class JSONProject {
  <<interface>>
  name string
  machine MachineName
  selectedReport? number
  settings JSONProjectSettings
  images JSONImage[]
  informations JSONField[]
  reports JSONReport[]
  units JSONUnits
}
JSONProject --> MachineName
JSONProject --> JSONProjectSettings
JSONProject --> JSONImage
JSONProject --> JSONField
JSONProject --> JSONReport
JSONProject --> JSONUnits

class MachineName {
  <<type>>
  'heavydyn' | 'maxidyn' | 'minidyn'
}


class JSONProjectSettings {
  <<interface>>
  arePointsVisible boolean
  arePointsLinked boolean
  arePointsLocked boolean
  areImagesVisible boolean
  pointsState PointsState
  map #123; styleIndex: numbercoordinates?: LngLatzoom?: number #125;
}
JSONProjectSettings --> PointsState
JSONProjectSettings --> LngLat

class PointsState {
  <<type>>
  'value' | 'number' | 'nothing'
}


class HeavydynProject {
  <<interface>>
  machine 'heavydyn'
  reports SelectableList<HeavydynReport>
}
HeavydynProject --> SelectableList
HeavydynProject --> HeavydynReport

class HeavydynUnits {
  <<interface>>
  deformation MathUnit
  force MathUnit
  temperature MathUnit
}
HeavydynUnits --> MathUnit
HeavydynUnits --> MathUnit
HeavydynUnits --> MathUnit

class JSONHeavydynUnits {
  <<interface>>
  deformation 'mm' | '1/100 mm' | 'um'
  force 'N' | 'kN' | 'lbs'
  temperature 'degC' | 'degF' | 'K'
}


class MaxidynProject {
  <<interface>>
  machine 'maxidyn'
  reports SelectableList<MaxidynReport>
}
MaxidynProject --> SelectableList
MaxidynProject --> MaxidynReport

class MaxidynUnits {
  <<interface>>
  modulus MathUnit
  deformation MathUnit
  force MathUnit
}
MaxidynUnits --> MathUnit
MaxidynUnits --> MathUnit
MaxidynUnits --> MathUnit

class JSONMaxidynUnits {
  <<interface>>
  modulus 'MPa' | 'kN'
  deformation 'mm' | 'um'
  force 'N' | 'kN'
}


class MinidynProject {
  <<interface>>
  machine 'minidyn'
  reports SelectableList<MinidynReport>
}
MinidynProject --> SelectableList
MinidynProject --> MinidynReport

class MinidynUnits {
  <<interface>>
  modulus MathUnit
  deformation MathUnit
  force MathUnit
  temperature MathUnit
}
MinidynUnits --> MathUnit
MinidynUnits --> MathUnit
MinidynUnits --> MathUnit
MinidynUnits --> MathUnit

class JSONMinidynUnits {
  <<interface>>
  modulus 'MPa' | 'kN'
  deformation 'mm' | 'um'
  force 'N' | 'kN'
}


class MachineProject {
  <<type>>
  HeavydynProject | MaxidynProject | MinidynProject
}
MachineProject --> HeavydynProject
MachineProject --> MaxidynProject
MachineProject --> MinidynProject

class PartialMachineProject {
  <<type>>
  PartialExtendedObject<BaseProject, MachineProject>
}
PartialMachineProject --> PartialExtendedObject
PartialMachineProject --> BaseProject
PartialMachineProject --> MachineProject

class JSONUnits {
  <<type>>
  JSONHeavydynUnits | JSONMaxidynUnits | JSONMinidynUnits
}
JSONUnits --> JSONHeavydynUnits
JSONUnits --> JSONMaxidynUnits
JSONUnits --> JSONMinidynUnits

class MachineUnits {
  <<type>>
  HeavydynUnits | MaxidynUnits | MinidynUnits
}
MachineUnits --> HeavydynUnits
MachineUnits --> MaxidynUnits
MachineUnits --> MinidynUnits

class BaseReport {
  <<interface>>
  machine MachineName
  name MachineField
  points MachinePoint[]
  line Line
  zones Zone[]
  screenshots string[]
  valuesNames ReportValuesNames
  settings JSONReportSettings
  platform MachineField[]
  informations MachineField[]
  isOnMap boolean
  fitOnMap () => void
  addToMap () => void
  remove () => void
}
BaseReport --> MachineName
BaseReport --> MachineField
BaseReport --> MachinePoint
BaseReport --> Line
BaseReport --> Zone
BaseReport --> ReportValuesNames
BaseReport --> JSONReportSettings
BaseReport --> MachineField
BaseReport --> MachineField

class ReportValuesNames {
  <<interface>>
  groups SelectableList<GroupedValuesNames>
  table SelectableList<TableValuesNamesParameters>
}
ReportValuesNames --> SelectableList
ReportValuesNames --> GroupedValuesNames
ReportValuesNames --> SelectableList
ReportValuesNames --> TableValuesNamesParameters

class GroupedValuesNames {
  <<interface>>
  from ValuesNamesFrom
  choices SelectableList<ValueName>
  indexes? SelectableList<MachineDropIndex>
}
GroupedValuesNames --> ValuesNamesFrom
GroupedValuesNames --> SelectableList
GroupedValuesNames --> ValueName
GroupedValuesNames --> SelectableList
GroupedValuesNames --> MachineDropIndex

class TableValuesNamesParameters {
  <<interface>>
  group GroupedValuesNames
  index? MachineDropIndex
  valuesNames ValueName[]
}
TableValuesNamesParameters --> GroupedValuesNames
TableValuesNamesParameters --> MachineDropIndex
TableValuesNamesParameters --> ValueName

class ValueName {
  <<interface>>
  name string
  unit MathUnit
}
ValueName --> MathUnit

class BaseReportCreatorParameters {
  <<interface>>
  machine MachineName
  groupedValuesNames SelectableList<GroupedValuesNames>
}
BaseReportCreatorParameters --> MachineName
BaseReportCreatorParameters --> SelectableList
BaseReportCreatorParameters --> GroupedValuesNames

class JSONReport {
  <<interface>>
  name string
  points JSONPoint[]
  valuesNames JSONReportValuesNames
  zones JSONZone[]
  settings JSONReportSettings
  screenshots number[]
  platform JSONField[]
  informations JSONField[]
}
JSONReport --> JSONPoint
JSONReport --> JSONReportValuesNames
JSONReport --> JSONZone
JSONReport --> JSONReportSettings
JSONReport --> JSONField
JSONReport --> JSONField

class JSONReportValuesNames {
  <<interface>>
  groups SelectableList<number, JSONGroupedValuesNames>
  table SelectableList<number, JSONTableValuesNames>
}
JSONReportValuesNames --> SelectableList
JSONReportValuesNames --> JSONGroupedValuesNames
JSONReportValuesNames --> SelectableList
JSONReportValuesNames --> JSONTableValuesNames

class JSONGroupedValuesNames {
  <<interface>>
  from ValuesNamesFrom
  choices SelectableOptionalList<number, string>
  indexes? SelectableList<number, MachineDropIndex>
}
JSONGroupedValuesNames --> ValuesNamesFrom
JSONGroupedValuesNames --> SelectableOptionalList
JSONGroupedValuesNames --> SelectableList
JSONGroupedValuesNames --> MachineDropIndex

class JSONTableValuesNames {
  <<interface>>
  from ValuesNamesFrom
  index? number
  valuesNames string[]
}
JSONTableValuesNames --> ValuesNamesFrom

class ValuesNamesFrom {
  <<type>>
  'Drop' | 'Test' | 'Zone'
}


class JSONReportSettings {
  <<interface>>
  iconName IconName
  isVisible boolean
  selectedColorization 'Threshold' | 'Zone'
  threshold #123; colors: ThresholdColorscustom: #123;  #125; #125;
}
JSONReportSettings --> IconName
JSONReportSettings --> ThresholdColors

class ThresholdColors {
  <<interface>>
  low Color
  middle Color
  high Color
}
ThresholdColors --> Color
ThresholdColors --> Color
ThresholdColors --> Color

class BaseDropIndex {
  <<interface>>
  machine MachineName
  type string
  displayedIndex number
}
BaseDropIndex --> MachineName

class HeavydynReport {
  <<interface>>
  machine 'heavydyn'
  points HeavydynPoint[]
  platform HeavydynField[]
  informations HeavydynField[]
}
HeavydynReport --> HeavydynPoint
HeavydynReport --> HeavydynField
HeavydynReport --> HeavydynField

class HeavydynReportCreatorParameters {
  <<interface>>
  units HeavydynUnits
}
HeavydynReportCreatorParameters --> HeavydynUnits

class HeavydynDropType {
  <<type>>
  'Distance' | 'Force' | 'Time'
}


class HeavydynDropIndex {
  <<interface>>
  machine 'heavydyn'
  type HeavydynDropType
  value MathNumber
}
HeavydynDropIndex --> HeavydynDropType
HeavydynDropIndex --> MathNumber

class JSONHeavydynDropIndex {
  <<interface>>
  machine 'heavydyn'
  type HeavydynDropType
  value number
}
JSONHeavydynDropIndex --> HeavydynDropType

class MaxidynReport {
  <<interface>>
  machine 'maxidyn'
  points MaxidynPoint[]
  platform MaxidynField[]
  informations MaxidynField[]
}
MaxidynReport --> MaxidynPoint
MaxidynReport --> MaxidynField
MaxidynReport --> MaxidynField

class MaxidynReportCreatorParameters {
  <<interface>>
  units MaxidynUnits
}
MaxidynReportCreatorParameters --> MaxidynUnits

class MaxidynDropType {
  <<type>>
  'Training' | 'Averaging'
}


class MaxidynDropIndex {
  <<interface>>
  machine 'maxidyn'
  type MaxidynDropType
}
MaxidynDropIndex --> MaxidynDropType

class MinidynReport {
  <<interface>>
  machine 'minidyn'
  points MinidynPoint[]
  platform MinidynField[]
  informations MinidynField[]
}
MinidynReport --> MinidynPoint
MinidynReport --> MinidynField
MinidynReport --> MinidynField

class MinidynReportCreatorParameters {
  <<interface>>
  units MinidynUnits
}
MinidynReportCreatorParameters --> MinidynUnits

class MinidynDropType {
  <<type>>
  'Training' | 'Averaging'
}


class MinidynDropIndex {
  <<interface>>
  machine 'minidyn'
  type MinidynDropType
}
MinidynDropIndex --> MinidynDropType

class MachineReport {
  <<type>>
  HeavydynReport | MaxidynReport | MinidynReport
}
MachineReport --> HeavydynReport
MachineReport --> MaxidynReport
MachineReport --> MinidynReport

class PartialMachineReport {
  <<type>>
  PartialExtendedObject<BaseReport, MachineReport>
}
PartialMachineReport --> PartialExtendedObject
PartialMachineReport --> BaseReport
PartialMachineReport --> MachineReport

class MachineReportCreatorParameters {
  <<interface>>
  projectSettings JSONProjectSettings
  units MachineUnits
}
MachineReportCreatorParameters --> JSONProjectSettings
MachineReportCreatorParameters --> MachineUnits

class MachineDropIndex {
  <<type>>
  HeavydynDropIndex | MaxidynDropIndex | MinidynDropIndex
}
MachineDropIndex --> HeavydynDropIndex
MachineDropIndex --> MaxidynDropIndex
MachineDropIndex --> MinidynDropIndex

class JSONMachineDropIndex {
  <<type>>
  | JSONHeavydynDropIndex| MaxidynDropIndex| MinidynDropIndex
}
JSONMachineDropIndex --> JSONHeavydynDropIndex
JSONMachineDropIndex --> MaxidynDropIndex
JSONMachineDropIndex --> MinidynDropIndex

class CustomThreshold {
  <<interface>>
  name string
  value number
}


class PredefinedThreshold {
  <<interface>>
  name string
  value number
}


class PartialExtendedObject {
  <<type>>
  Required<BaseObject> &Partial<Omit<MachineObject, keyof BaseObject>>
}


class WatcherHandler {
  <<interface>>
  [stop: () => void] () => void
  [stop?: () => void] void
  [] void
}


class Zone {
  <<interface>>
  name string
  color Color
}
Zone --> Color

class JSONZone {
  <<interface>>
  name string
  color? Color
}
JSONZone --> Color

class LngLat {
  <<interface>>
  lng number
  lat number
}


class XYCoord {
  <<interface>>
  x number
  y number
}


class SelectableList {
  <<interface>>
  selected S | null
  list L[]
}


class SelectableOptionalList {
  <<interface>>
  selected S | null
  list? L[]
}


class Store {
  <<interface>>
  projects SelectableList<MachineProject>
  map mapboxgl.Map | null
  save (key: StoreKeys, value: StoreSaveableTypes) => void
}
Store --> SelectableList
Store --> MachineProject

class StoreKeys {
  <<type>>
  Exclude<keyof Store, 'save'>
}
StoreKeys --> Store

class StoreTypes {
  <<type>>
  Store[keyof Store]
}
StoreTypes --> Store

class StoreSaveableTypes {
  <<type>>
  Extract<StoreTypes, string[] | number[] | boolean[] | string | number | boolean | null>
}
StoreSaveableTypes --> StoreTypes

