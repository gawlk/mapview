classDiagram
class Menu {
  <<interface>>
  name: string
  icon: any
  component: any
  props: MenuProps
  needsReport?: boolean
  style?: string
  class?: string
  openedOnMobile?: boolean
}
Menu <.. MenuProps


class MenuProps {
  <<interface>>
  route: string
}



class GenericContainerProps {
  <<interface>>
  element?: any
  xxxl?: boolean
  xxl?: boolean
  xl?: boolean
  lg?: boolean
  sm?: boolean
  full?: boolean
  horizontal?: boolean
  vertical?: boolean
  rounded?: boolean
  colorless?: boolean
  transparent?: boolean
  primary?: boolean
  secondary?: boolean
  tertiary?: boolean
  black?: boolean
  red?: boolean
  orange?: boolean
  amber?: boolean
  yellow?: boolean
  lime?: boolean
  green?: boolean
  emerald?: boolean
  teal?: boolean
  cyan?: boolean
  sky?: boolean
  blue?: boolean
  indigo?: boolean
  violet?: boolean
  purple?: boolean
  fuchsia?: boolean
  pink?: boolean
  rose?: boolean
  clickable?: boolean
  focusable?: boolean
  disabled?: boolean
  svg?: any
  leftSvg?: any
  rightSvg?: any
  src?: string
  leftSrc?: string
  rightSrc?: string
  containerClasses?: string
  illustrationClasses?: string
  leftIllustrationClasses?: string
  rightIllustrationClasses?: string
}



class GenericIllustrationProps {
  <<interface>>
  right?: boolean
}

GenericContainerProps <|-- GenericIllustrationProps

class Color {
  <<interface>>
  buttonColors: string
  iconsClasses: string
  hexColor: string
}



class ColorName {
  <<type>>
  | 'gray'   | 'red'   | 'orange'   | 'amber'   | 'yellow'   | 'lime'   | 'green'   | 'emerald'   | 'teal'   | 'cyan'   | 'sky'   | 'blue'   | 'indigo'   | 'violet'   | 'purple'   | 'fuchsia'   | 'pink'   | 'rose'
}



class DataCategory {
  <<interface>>
  name: string
}



class MathNumberObject {
  <<interface>>
  [key: string]: MathNumber | MathNumber[] | MathNumber[][]
}
MathNumberObject <.. MathNumber


class ComputedData {
  <<interface>>
  raw: MathNumberObject
  parameters: MathNumberObject
  computed: MathNumberObject
  compute: #40;#41; =#62; void
}
ComputedData <.. MathNumberObject


class DataLabel~T~ {
  <<interface>>
  name: string
  unit: MathUnit#60;T#62;
  category: DataCategory
  toJSON: #40;#41; =#62; JSONDataLabel#60;T#62;
}
DataLabel~T~ <.. MathUnit~PossibleUnits~
DataLabel~T~ <.. DataCategory


class DataLabelsFrom {
  <<type>>
  'Drop' | 'Test' | 'Zone'
}



class BaseDataLabels {
  <<interface>>
  groups: SelectableList#60;AnyBaseDataLabelsGroup, BaseDataLabelsGroups#62;
  table: SelectableList#60;BaseTableDataLabelsParameters#62;
}
BaseDataLabels <.. SelectableList~T, L~
BaseDataLabels <.. AnyBaseDataLabelsGroup
BaseDataLabels <.. BaseDataLabelsGroups
BaseDataLabels <.. BaseTableDataLabelsParameters


class BaseDataLabelsGroups {
  <<type>>
  [   BaseDropDataLabelsGroup#60;BaseDropIndex#62;,   BaseTestDataLabelsGroup,   BaseZoneDataLabelsGroup ]
}
BaseDataLabelsGroups <.. BaseDropDataLabelsGroup~Drop~
BaseDataLabelsGroups <.. BaseDropIndex
BaseDataLabelsGroups <.. BaseTestDataLabelsGroup
BaseDataLabelsGroups <.. BaseZoneDataLabelsGroup


class AnyBaseDataLabelsGroup {
  <<type>>
  BaseDataLabelsGroups[number]
}
AnyBaseDataLabelsGroup <.. BaseDataLabelsGroups


class BaseDataLabelsGroup~From~ {
  <<interface>>
  from: From
  choices: SelectableList#60;DataLabel#60;string#62;#62;
}
BaseDataLabelsGroup~From~ <.. SelectableList~T, L~
BaseDataLabelsGroup~From~ <.. DataLabel~T~


class BaseDropDataLabelsGroup~Drop~ {
  <<interface>>
  indexes: SelectableList#60;Drop#62;
}
BaseDropDataLabelsGroup~Drop~ <.. SelectableList~T, L~


class BaseTestDataLabelsGroup {
  <<interface>>

}



class BaseZoneDataLabelsGroup {
  <<interface>>

}



class BaseTableDataLabelsParameters {
  <<interface>>
  group: AnyBaseDataLabelsGroup
  dataLabels: DataLabel#60;string#62;[]
  index?: BaseDropIndex
}
BaseTableDataLabelsParameters <.. AnyBaseDataLabelsGroup
BaseTableDataLabelsParameters <.. DataLabel~T~
BaseTableDataLabelsParameters <.. BaseDropIndex


class HeavydynDataLabels {
  <<interface>>
  groups: SelectableList#60;     HeavydynDataLabelsGroup,     HeavydynDataLabelsGroups   #62;
}
HeavydynDataLabels <.. SelectableList~T, L~
HeavydynDataLabels <.. HeavydynDataLabelsGroup
HeavydynDataLabels <.. HeavydynDataLabelsGroups
BaseDataLabels <|-- HeavydynDataLabels

class HeavydynDataLabelsGroup {
  <<type>>
  HeavydynDataLabelsGroups[number]
}
HeavydynDataLabelsGroup <.. HeavydynDataLabelsGroups


class HeavydynDataLabelsGroups {
  <<type>>
  [   HeavydynDropDataLabelsGroup,   HeavydynTestDataLabelsGroup,   HeavydynZoneDataLabelsGroup ]
}
HeavydynDataLabelsGroups <.. HeavydynDropDataLabelsGroup
HeavydynDataLabelsGroups <.. HeavydynTestDataLabelsGroup
HeavydynDataLabelsGroups <.. HeavydynZoneDataLabelsGroup


class HeavydynDropDataLabelsGroup {
  <<interface>>
  indexes: SelectableList#60;HeavydynDropIndex#62;
  sequenceName: string
  toJSON: #40;#41; =#62; JSONHeavydynDropDataLabelsGroup
}
HeavydynDropDataLabelsGroup <.. SelectableList~T, L~
HeavydynDropDataLabelsGroup <.. HeavydynDropIndex


class HeavydynTestDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONHeavydynTestDataLabelsGroup
}

BaseTestDataLabelsGroup <|-- HeavydynTestDataLabelsGroup

class HeavydynZoneDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONHeavydynZoneDataLabelsGroup
}

BaseZoneDataLabelsGroup <|-- HeavydynZoneDataLabelsGroup

class MaxidynDataLabels {
  <<interface>>
  groups: SelectableList#60;     MaxidynDataLabelsGroup,     MaxidynDataLabelsGroups   #62;
}
MaxidynDataLabels <.. SelectableList~T, L~
MaxidynDataLabels <.. MaxidynDataLabelsGroup
MaxidynDataLabels <.. MaxidynDataLabelsGroups
BaseDataLabels <|-- MaxidynDataLabels

class MaxidynDataLabelsGroup {
  <<type>>
  MaxidynDataLabelsGroups[number]
}
MaxidynDataLabelsGroup <.. MaxidynDataLabelsGroups


class MaxidynDataLabelsGroups {
  <<type>>
  [   MaxidynDropDataLabelsGroup,   MaxidynTestDataLabelsGroup,   MaxidynZoneDataLabelsGroup ]
}
MaxidynDataLabelsGroups <.. MaxidynDropDataLabelsGroup
MaxidynDataLabelsGroups <.. MaxidynTestDataLabelsGroup
MaxidynDataLabelsGroups <.. MaxidynZoneDataLabelsGroup


class MaxidynDropDataLabelsGroup {
  <<interface>>
  indexes: SelectableList#60;MaxidynDropIndex#62;
  toJSON: #40;#41; =#62; JSONMaxidynDropDataLabelsGroup
}
MaxidynDropDataLabelsGroup <.. SelectableList~T, L~
MaxidynDropDataLabelsGroup <.. MaxidynDropIndex


class MaxidynTestDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONMaxidynTestDataLabelsGroup
}

BaseTestDataLabelsGroup <|-- MaxidynTestDataLabelsGroup

class MaxidynZoneDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONMaxidynZoneDataLabelsGroup
}

BaseZoneDataLabelsGroup <|-- MaxidynZoneDataLabelsGroup

class MinidynDataLabels {
  <<interface>>
  groups: SelectableList#60;     MinidynDataLabelsGroup,     MinidynDataLabelsGroups   #62;
}
MinidynDataLabels <.. SelectableList~T, L~
MinidynDataLabels <.. MinidynDataLabelsGroup
MinidynDataLabels <.. MinidynDataLabelsGroups
BaseDataLabels <|-- MinidynDataLabels

class MinidynDataLabelsGroup {
  <<type>>
  MinidynDataLabelsGroups[number]
}
MinidynDataLabelsGroup <.. MinidynDataLabelsGroups


class MinidynDataLabelsGroups {
  <<type>>
  [   MinidynDropDataLabelsGroup,   MinidynTestDataLabelsGroup,   MinidynZoneDataLabelsGroup ]
}
MinidynDataLabelsGroups <.. MinidynDropDataLabelsGroup
MinidynDataLabelsGroups <.. MinidynTestDataLabelsGroup
MinidynDataLabelsGroups <.. MinidynZoneDataLabelsGroup


class MinidynDropDataLabelsGroup {
  <<interface>>
  indexes: SelectableList#60;MinidynDropIndex#62;
  toJSON: #40;#41; =#62; JSONMinidynDropDataLabelsGroup
}
MinidynDropDataLabelsGroup <.. SelectableList~T, L~
MinidynDropDataLabelsGroup <.. MinidynDropIndex


class MinidynTestDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONMinidynTestDataLabelsGroup
}

BaseTestDataLabelsGroup <|-- MinidynTestDataLabelsGroup

class MinidynZoneDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONMinidynZoneDataLabelsGroup
}

BaseZoneDataLabelsGroup <|-- MinidynZoneDataLabelsGroup

class MachineDataLabels {
  <<type>>
  | HeavydynDataLabels   | MaxidynDataLabels   | MinidynDataLabels
}
MachineDataLabels <.. HeavydynDataLabels
MachineDataLabels <.. MaxidynDataLabels
MachineDataLabels <.. MinidynDataLabels


class MachineDataLabelsGroups {
  <<type>>
  | HeavydynDataLabelsGroups   | MaxidynDataLabelsGroups   | MinidynDataLabelsGroups
}
MachineDataLabelsGroups <.. HeavydynDataLabelsGroups
MachineDataLabelsGroups <.. MaxidynDataLabelsGroups
MachineDataLabelsGroups <.. MinidynDataLabelsGroups


class MachineDataLabelsGroup {
  <<type>>
  | HeavydynDataLabelsGroup   | MaxidynDataLabelsGroup   | MinidynDataLabelsGroup
}
MachineDataLabelsGroup <.. HeavydynDataLabelsGroup
MachineDataLabelsGroup <.. MaxidynDataLabelsGroup
MachineDataLabelsGroup <.. MinidynDataLabelsGroup


class MachineDropDataLabelsGroup {
  <<type>>
  | HeavydynDropDataLabelsGroup   | MaxidynDropDataLabelsGroup   | MinidynDropDataLabelsGroup
}
MachineDropDataLabelsGroup <.. HeavydynDropDataLabelsGroup
MachineDropDataLabelsGroup <.. MaxidynDropDataLabelsGroup
MachineDropDataLabelsGroup <.. MinidynDropDataLabelsGroup


class DataValue~T~ {
  <<interface>>
  category: string
  label: DataLabel#60;T#62;
  value: MathNumber
  toJSON: #40;#41; =#62; JSONDataValue
}
DataValue~T~ <.. DataLabel~T~
DataValue~T~ <.. MathNumber


class BaseDrop~DropIndex, Point~ {
  <<interface>>
  index: DropIndex
  data: DataValue#60;string#62;[]
  point: Point
  impactData: ImpactData | null
}
BaseDrop~DropIndex, Point~ <.. DataValue~T~
BaseDrop~DropIndex, Point~ <.. ImpactData


class BaseDropIndex {
  <<interface>>
  displayedIndex: number
}



class HeavydynDropType {
  <<type>>
  'Distance' | 'Time' | 'Force' | 'Height'
}



class HeavydynDrop {
  <<interface>>

}



class HeavydynDropIndex {
  <<interface>>
  type: HeavydynDropType
  value: MathNumber
}
HeavydynDropIndex <.. HeavydynDropType
HeavydynDropIndex <.. MathNumber
BaseDropIndex <|-- HeavydynDropIndex

class MaxidynDropType {
  <<type>>
  'Training' | 'Averaging'
}



class MaxidynDrop {
  <<interface>>

}



class MaxidynDropIndex {
  <<interface>>
  type: MaxidynDropType
}
MaxidynDropIndex <.. MaxidynDropType
BaseDropIndex <|-- MaxidynDropIndex

class MinidynDropType {
  <<type>>
  'Training' | 'Averaging'
}



class MinidynDrop {
  <<interface>>

}



class MinidynDropIndex {
  <<interface>>
  type: MinidynDropType
}
MinidynDropIndex <.. MinidynDropType
BaseDropIndex <|-- MinidynDropIndex

class MachineDrop {
  <<type>>
  HeavydynDrop | MaxidynDrop | MinidynDrop
}
MachineDrop <.. HeavydynDrop
MachineDrop <.. MaxidynDrop
MachineDrop <.. MinidynDrop


class MachineDropIndex {
  <<type>>
  HeavydynDropIndex | MaxidynDropIndex | MinidynDropIndex
}
MachineDropIndex <.. HeavydynDropIndex
MachineDropIndex <.. MaxidynDropIndex
MachineDropIndex <.. MinidynDropIndex


class Field {
  <<interface>>
  label: string
  settings: JSONFieldSettings
  value: | boolean     | number     | string     | SlidableNumber     | DateValue     | LongString     | SelectableString
  getValue: #40;#41; =#62; string | number | boolean
  setValue: #40;value: string | number#41; =#62; void
  toString: #40;#41; =#62; string
  toJSON: #40;#41; =#62; JSONField
}
Field <.. SlidableNumber
Field <.. DateValue
Field <.. LongString
Field <.. SelectableString


class SlidableNumber {
  <<interface>>
  kind: 'slidableNumber'
  step: number
  min: number
  max: number
  value: number
}



class DateValue {
  <<interface>>
  kind: 'dateValue'
  value: string
}



class LongString {
  <<interface>>
  kind: 'longString'
  value: string
}



class SelectableString {
  <<interface>>
  kind: 'selectableString'
  possibleValues: string[]
  value: string
}



class Icon {
  <<interface>>
  element: HTMLElement
  color: string
  setColor: #40;color?: string#41; =#62; void
  setText: #40;text: string#41; =#62; void
  setIcon: #40;iconName: IconName#41; =#62; void
}



class IconName {
  <<type>>
  | 'Circle'   | 'Triangle'   | 'Square'   | 'Rhombus'   | 'Flare'   | 'Pentagon'   | 'Hexagon'   | 'HexagonAlt'   | 'Heptagon'   | 'Octagon'
}



class Line {
  <<interface>>
  sortedPoints: MachinePoint[]
  addToMap: #40;#41; =#62; void
  update: #40;#41; =#62; void
  remove: #40;#41; =#62; void
}
Line <.. MachinePoint


class MathNumber {
  <<interface>>
  value: number
  unit: MathUnit#60;string#62;
  displayedString: string
  displayedStringWithUnit: string
  updateDisplayedStrings: #40;#41; =#62; void
  getLocaleString: #40;     options: MathNumberGetLocaleStringOptions   #41; =#62; string
  getValueAs: #40;unit: string#41; =#62; number
}
MathNumber <.. MathUnit~PossibleUnits~


class MathNumberGetLocaleStringOptions {
  <<interface>>
  appendUnitToString?: true
  locale?: string
  precision?: number
  disablePreString?: true
  unit?: string
  removeSpaces?: true
  disableMinAndMax?: true
}



class MathUnit~PossibleUnits~ {
  <<interface>>
  name: string
  baseUnit: string
  possibleSettings: [PossibleUnits, number][]
  possiblePrecisions: number[]
  readOnly: boolean
  min: number
  max: number
  currentUnit: PossibleUnits
  currentPrecision: number
  getAverage: #40;values: number[]#41; =#62; number
  toJSON: #40;#41; =#62; JSONMathUnit#60;PossibleUnits#62;
}



class HeavydynUnitsSkeleton~A, B, C, D, E~ {
  <<interface>>
  deflection: A
  force: B
  temperature: C
  distance: D
  time: E
}



class HeavydynUnitsNames {
  <<type>>
  keyof HeavydynUnitsSkeleton#60;any#62;
}
HeavydynUnitsNames <.. HeavydynUnitsSkeleton~A, B, C, D, E~


class PossibleHeavydynDeflectionUnits {
  <<type>>
  'mm' | '1/100 mm' | 'um'
}



class PossibleHeavydynForceUnits {
  <<type>>
  'N' | 'kN' | 'lbs'
}



class PossibleHeavydynTemperatureUnits {
  <<type>>
  '°C' | '°F' | 'K'
}



class PossibleHeavydynDistanceUnits {
  <<type>>
  'm' | 'km' | 'mi'
}



class PossibleHeavydynTimeUnits {
  <<type>>
  's' | 'ms' | 'us'
}



class HeavydynMathUnits {
  <<type>>
  HeavydynUnitsSkeleton#60;   MathUnit#60;PossibleHeavydynDeflectionUnits#62;,   MathUnit#60;PossibleHeavydynForceUnits#62;,   MathUnit#60;PossibleHeavydynTemperatureUnits#62;,   MathUnit#60;PossibleHeavydynDistanceUnits#62;,   MathUnit#60;PossibleHeavydynTimeUnits#62; #62;
}
HeavydynMathUnits <.. HeavydynUnitsSkeleton~A, B, C, D, E~
HeavydynMathUnits <.. MathUnit~PossibleUnits~
HeavydynMathUnits <.. PossibleHeavydynDeflectionUnits
HeavydynMathUnits <.. PossibleHeavydynForceUnits
HeavydynMathUnits <.. PossibleHeavydynTemperatureUnits
HeavydynMathUnits <.. PossibleHeavydynDistanceUnits
HeavydynMathUnits <.. PossibleHeavydynTimeUnits


class MaxidynUnitsSkeleton~A, B, C, D, E, F, G~ {
  <<interface>>
  modulus: A
  stiffness: B
  deflection: C
  force: D
  distance: E
  time: F
  percentage: G
}



class PossibleMaxidynModulusUnits {
  <<type>>
  'MPa'
}



class PossibleMaxidynStiffnessUnits {
  <<type>>
  'MN / m'
}



class PossibleMaxidynDeflectionUnits {
  <<type>>
  'mm' | 'um'
}



class PossibleMaxidynForceUnits {
  <<type>>
  'N' | 'kN'
}



class PossibleMaxidynDistanceUnits {
  <<type>>
  'm' | 'km' | 'mi'
}



class PossibleMaxidynTimeUnits {
  <<type>>
  's' | 'ms' | 'us'
}



class PossibleMaxidynPercentageUnits {
  <<type>>
  '%'
}



class MaxidynMathUnits {
  <<type>>
  MaxidynUnitsSkeleton#60;   MathUnit#60;PossibleMaxidynModulusUnits#62;,   MathUnit#60;PossibleMaxidynStiffnessUnits#62;,   MathUnit#60;PossibleMaxidynDeflectionUnits#62;,   MathUnit#60;PossibleMaxidynForceUnits#62;,   MathUnit#60;PossibleMaxidynDistanceUnits#62;,   MathUnit#60;PossibleMaxidynTimeUnits#62;,   MathUnit#60;PossibleMaxidynPercentageUnits#62; #62;
}
MaxidynMathUnits <.. MaxidynUnitsSkeleton~A, B, C, D, E, F, G~
MaxidynMathUnits <.. MathUnit~PossibleUnits~
MaxidynMathUnits <.. PossibleMaxidynModulusUnits
MaxidynMathUnits <.. PossibleMaxidynStiffnessUnits
MaxidynMathUnits <.. PossibleMaxidynDeflectionUnits
MaxidynMathUnits <.. PossibleMaxidynForceUnits
MaxidynMathUnits <.. PossibleMaxidynDistanceUnits
MaxidynMathUnits <.. PossibleMaxidynTimeUnits
MaxidynMathUnits <.. PossibleMaxidynPercentageUnits


class MaxidynUnitsNames {
  <<type>>
  keyof MaxidynUnitsSkeleton#60;any#62;
}
MaxidynUnitsNames <.. MaxidynUnitsSkeleton~A, B, C, D, E, F, G~


class MinidynUnitsSkeleton~A, B, C, D, E, F~ {
  <<interface>>
  modulus: A
  stiffness: B
  deflection: C
  force: D
  time: E
  percentage: F
}



class PossibleMinidynModulusUnits {
  <<type>>
  'MPa'
}



class PossibleMinidynStiffnessUnits {
  <<type>>
  'MN / m'
}



class PossibleMinidynDeflectionUnits {
  <<type>>
  'mm' | 'um'
}



class PossibleMinidynForceUnits {
  <<type>>
  'N' | 'kN'
}



class PossibleMinidynTimeUnits {
  <<type>>
  's' | 'ms' | 'us'
}



class PossibleMinidynPercentageUnits {
  <<type>>
  '%'
}



class MinidynMathUnits {
  <<type>>
  MinidynUnitsSkeleton#60;   MathUnit#60;PossibleMinidynModulusUnits#62;,   MathUnit#60;PossibleMinidynStiffnessUnits#62;,   MathUnit#60;PossibleMinidynDeflectionUnits#62;,   MathUnit#60;PossibleMinidynForceUnits#62;,   MathUnit#60;PossibleMinidynTimeUnits#62;,   MathUnit#60;PossibleMinidynPercentageUnits#62; #62;
}
MinidynMathUnits <.. MinidynUnitsSkeleton~A, B, C, D, E, F~
MinidynMathUnits <.. MathUnit~PossibleUnits~
MinidynMathUnits <.. PossibleMinidynModulusUnits
MinidynMathUnits <.. PossibleMinidynStiffnessUnits
MinidynMathUnits <.. PossibleMinidynDeflectionUnits
MinidynMathUnits <.. PossibleMinidynForceUnits
MinidynMathUnits <.. PossibleMinidynTimeUnits
MinidynMathUnits <.. PossibleMinidynPercentageUnits


class MinidynUnitsNames {
  <<type>>
  keyof MinidynUnitsSkeleton#60;any#62;
}
MinidynUnitsNames <.. MinidynUnitsSkeleton~A, B, C, D, E, F~


class Overlay {
  <<interface>>
  id: string
  sourceData: mapboxgl.ImageSourceRaw
  markerNW: mapboxgl.Marker
  markerSE: mapboxgl.Marker
  opacity: number
  addToMap: #40;isVisible: boolean#41; =#62; void
  remove: #40;#41; =#62; void
  toJSON: #40;#41; =#62; JSONOverlay
}



class ImageCoordinates {
  <<interface>>
  tl: XYCoord
  tr: XYCoord
  bl: XYCoord
  br: XYCoord
}
ImageCoordinates <.. XYCoord


class BasePoint~Drop, Zone~ {
  <<interface>>
  id: string
  date: Date
  marker: mapboxgl.Marker | null
  icon: Icon | null
  settings: JSONPointSettings
  data: DataValue#60;string#62;[]
  information: Field[]
  drops: Drop[]
  index: number
  number: number
  zone: Zone
  rawDataFile: ArrayBufferLike | null
  getSelectedMathNumber: #40;     groupFrom: DataLabelsFrom,     dataLabel: DataLabel#60;string#62;,     index?: BaseDropIndex | null   #41; =#62; MathNumber | undefined
  getDisplayedString: #40;     groupFrom: DataLabelsFrom,     dataLabel: DataLabel#60;string#62;,     index?: BaseDropIndex | null   #41; =#62; string
  updateColor: #40;#41; =#62; void
  updateText: #40;#41; =#62; void
  updateVisibility: #40;#41; =#62; void
  updatePopup: #40;#41; =#62; void
  addToMap: #40;#41; =#62; void
  checkVisibility: #40;#41; =#62; boolean
  remove: #40;#41; =#62; void
}
BasePoint~Drop, Zone~ <.. Icon
BasePoint~Drop, Zone~ <.. DataValue~T~
BasePoint~Drop, Zone~ <.. Field


class HeavydynPoint {
  <<interface>>

}



class MaxidynPoint {
  <<interface>>

}



class MinidynPoint {
  <<interface>>

}



class MachinePoint {
  <<type>>
  HeavydynPoint | MaxidynPoint | MinidynPoint
}
MachinePoint <.. HeavydynPoint
MachinePoint <.. MaxidynPoint
MachinePoint <.. MinidynPoint


class MachineName {
  <<type>>
  'Heavydyn' | 'Maxidyn' | 'Minidyn'
}



class BaseProject~Report, MathUnits~ {
  <<interface>>
  name: Field
  information: Field[]
  hardware: Field[]
  reports: SelectableList#60;Report#62;
  units: MathUnits
  settings: JSONProjectSettings
  overlays: Overlay[]
  acquisitionParameters: JSONAcquisitionParameters
  refreshLinesAndOverlays: #40;#41; =#62; void
  setMapStyle: #40;styleIndex: number#41; =#62; void
  fitOnMap: #40;#41; =#62; void
  addToMap: #40;#41; =#62; void
  remove: #40;#41; =#62; void
}
BaseProject~Report, MathUnits~ <.. Field
BaseProject~Report, MathUnits~ <.. SelectableList~T, L~
BaseProject~Report, MathUnits~ <.. Overlay


class LoadReferenceSourceList {
  <<type>>
  ['Sequence' | 'Custom']
}



class TemperatureFromSourceList {
  <<type>>
  ['Tair', 'Tsurf', 'Tman']
}



class TemperatureAverageList {
  <<type>>
  ['Point', 'Zone', 'Report', 'Custom']
}



class TemperatureStructureTypeList {
  <<type>>
  ['1', '2', '3', '4']
}



class HeavydynProject {
  <<interface>>
  calibrations: HeavydynCalibrations
  correctionParameters?: JSONHeavydynCorrectionParameters
}
HeavydynProject <.. HeavydynCalibrations


class HeavydynCalibrations {
  <<interface>>
  date: Date
  dPlate: number
  channels: JSONChannel[]
  sensors: JSONSensor[]
}



class MaxidynProject {
  <<interface>>
  bearingParameters: JSONBearingParameters
}



class MinidynProject {
  <<interface>>
  bearingParameters: JSONBearingParameters
}



class MachineProject {
  <<type>>
  HeavydynProject | MaxidynProject | MinidynProject
}
MachineProject <.. HeavydynProject
MachineProject <.. MaxidynProject
MachineProject <.. MinidynProject


class MachineMathUnits {
  <<type>>
  HeavydynMathUnits | MaxidynMathUnits | MinidynMathUnits
}
MachineMathUnits <.. HeavydynMathUnits
MachineMathUnits <.. MaxidynMathUnits
MachineMathUnits <.. MinidynMathUnits


class MachineUnitsSkeleton~T~ {
  <<type>>
  | HeavydynUnitsSkeleton#60;T#62;   | MaxidynUnitsSkeleton#60;T#62;   | MinidynUnitsSkeleton#60;T#62;
}
MachineUnitsSkeleton~T~ <.. HeavydynUnitsSkeleton~A, B, C, D, E~
MachineUnitsSkeleton~T~ <.. MaxidynUnitsSkeleton~A, B, C, D, E, F, G~
MachineUnitsSkeleton~T~ <.. MinidynUnitsSkeleton~A, B, C, D, E, F~


class MachineUnitsNames {
  <<type>>
  | HeavydynUnitsNames   | MaxidynUnitsNames   | MinidynUnitsNames
}
MachineUnitsNames <.. HeavydynUnitsNames
MachineUnitsNames <.. MaxidynUnitsNames
MachineUnitsNames <.. MinidynUnitsNames


class ReportColorization {
  <<type>>
  'Threshold' | 'Zone'
}



class ReportGroupBy {
  <<type>>
  'Number' | 'Zone'
}



class BaseReport~Project, Zone, DataLabels, Thresholds~ {
  <<interface>>
  name: Field
  line: Line
  zones: Zone[]
  screenshots: string[]
  dataLabels: DataLabels
  thresholds: Thresholds
  settings: JSONReportSettings
  platform: Field[]
  information: Field[]
  project: Project
  isOnMap: boolean
  fitOnMap: #40;#41; =#62; void
  addToMap: #40;#41; =#62; void
  remove: #40;#41; =#62; void
}
BaseReport~Project, Zone, DataLabels, Thresholds~ <.. Field
BaseReport~Project, Zone, DataLabels, Thresholds~ <.. Line


class HeavydynReportCreatorParameters {
  <<interface>>
  project: HeavydynProject
}
HeavydynReportCreatorParameters <.. HeavydynProject
MachineReportCreatorParameters <|-- HeavydynReportCreatorParameters

class HeavydynReport {
  <<interface>>
  addZone: #40;#41; =#62; void
}



class MaxidynReportCreatorParameters {
  <<interface>>
  project: MaxidynProject
}
MaxidynReportCreatorParameters <.. MaxidynProject
MachineReportCreatorParameters <|-- MaxidynReportCreatorParameters

class MaxidynReport {
  <<interface>>
  addZone: #40;#41; =#62; void
}



class MinidynReportCreatorParameters {
  <<interface>>
  project: MinidynProject
}
MinidynReportCreatorParameters <.. MinidynProject
MachineReportCreatorParameters <|-- MinidynReportCreatorParameters

class MinidynReport {
  <<interface>>
  addZone: #40;#41; =#62; void
}



class MachineReport {
  <<type>>
  HeavydynReport | MaxidynReport | MinidynReport
}
MachineReport <.. HeavydynReport
MachineReport <.. MaxidynReport
MachineReport <.. MinidynReport


class MachineReportCreatorParameters {
  <<interface>>
  project: MachineProject
}
MachineReportCreatorParameters <.. MachineProject


class BaseThresholds~ThresholdsGroups~ {
  <<interface>>
  groups: ThresholdsGroups
  colors: JSONThresholdColors
  inputs: JSONThresholdInputs
}



class BaseThresholdsGroups {
  <<type>>
  MachineUnitsSkeleton#60;ThresholdsGroup#60;string#62;#62;
}
BaseThresholdsGroups <.. MachineUnitsSkeleton~T~
BaseThresholdsGroups <.. ThresholdsGroup~T~


class CustomThresholdType {
  <<type>>
  'Bicolor' | 'Gradient' | 'Tricolor'
}



class CustomThreshold {
  <<interface>>
  kind: 'custom'
  name: 'Custom'
  type: CustomThresholdType
  value: number
  valueHigh: number
  getColor: #40;     mathNumber: MathNumber,     colors: JSONThresholdColors   #41; =#62; string
  toJSON: #40;#41; =#62; JSONCustomThreshold
}
CustomThreshold <.. CustomThresholdType


class HeavydynThresholds {
  <<interface>>
  groups: HeavydynThresholdsGroups
}
HeavydynThresholds <.. HeavydynThresholdsGroups


class HeavydynThresholdsGroups {
  <<type>>
  HeavydynUnitsSkeleton#60;ThresholdsGroup#60;string#62;#62;
}
HeavydynThresholdsGroups <.. HeavydynUnitsSkeleton~A, B, C, D, E~
HeavydynThresholdsGroups <.. ThresholdsGroup~T~


class MaxidynThresholds {
  <<interface>>
  groups: MaxidynThresholdsGroups
}
MaxidynThresholds <.. MaxidynThresholdsGroups


class MaxidynThresholdsGroups {
  <<type>>
  MaxidynUnitsSkeleton#60;ThresholdsGroup#60;string#62;#62;
}
MaxidynThresholdsGroups <.. MaxidynUnitsSkeleton~A, B, C, D, E, F, G~
MaxidynThresholdsGroups <.. ThresholdsGroup~T~


class MinidynThresholds {
  <<interface>>

}



class MinidynThresholdsGroups {
  <<type>>
  MinidynUnitsSkeleton#60;ThresholdsGroup#60;string#62;#62;
}
MinidynThresholdsGroups <.. MinidynUnitsSkeleton~A, B, C, D, E, F~
MinidynThresholdsGroups <.. ThresholdsGroup~T~


class PredefinedThreshold {
  <<interface>>
  kind: 'predefined'
  name: string
  value: number
  getColor: #40;     mathNumber: MathNumber,     colors: JSONThresholdColors   #41; =#62; string
}



class AnyThreshold {
  <<type>>
  PredefinedThreshold | CustomThreshold
}
AnyThreshold <.. PredefinedThreshold
AnyThreshold <.. CustomThreshold


class ThresoldsList {
  <<type>>
  [...PredefinedThreshold[], CustomThreshold]
}
ThresoldsList <.. PredefinedThreshold
ThresoldsList <.. CustomThreshold


class MachineThresholds {
  <<type>>
  | HeavydynThresholds   | MaxidynThresholds   | MinidynThresholds
}
MachineThresholds <.. HeavydynThresholds
MachineThresholds <.. MaxidynThresholds
MachineThresholds <.. MinidynThresholds


class MachineThresholdsGroups {
  <<type>>
  | HeavydynThresholdsGroups   | MaxidynThresholdsGroups   | MinidynThresholdsGroups
}
MachineThresholdsGroups <.. HeavydynThresholdsGroups
MachineThresholdsGroups <.. MaxidynThresholdsGroups
MachineThresholdsGroups <.. MinidynThresholdsGroups


class ThresholdsGroup~T~ {
  <<interface>>
  unit: MathUnit#60;T#62;
  choices: SelectableList#60;AnyThreshold, ThresoldsList#62;
}
ThresholdsGroup~T~ <.. MathUnit~PossibleUnits~
ThresholdsGroup~T~ <.. SelectableList~T, L~
ThresholdsGroup~T~ <.. AnyThreshold
ThresholdsGroup~T~ <.. ThresoldsList


class SerializableObject~T~ {
  <<interface>>
  toJSON: #40;#41; =#62; T
}



class MachineObject~M, T~ {
  <<interface>>
  machine: M
}



class HeavydynObject~T~ {
  <<interface>>

}



class MaxidynObject~T~ {
  <<interface>>

}



class MinidynObject~T~ {
  <<interface>>

}



class BaseObject~T~ {
  <<interface>>
  toBaseJSON: #40;#41; =#62; T
}



class WatcherHandler {
  <<interface>>
  add: #40;stop: #40;#41; =#62; void#41; =#62; void
  remove: #40;stop: #40;#41; =#62; void#41; =#62; void
  clean: #40;#41; =#62; void
  stops: #40;#40;#41; =#62; void#41;[]
}



class BaseZone~Point, Report~ {
  <<interface>>
  points: Point[]
  settings: JSONZoneSettings
  name: string
  report: Report
  init: #40;#41; =#62; void
  clean: #40;#41; =#62; void
}



class HeavydynZoneCreatorParameters {
  <<interface>>
  report: HeavydynReport
}
HeavydynZoneCreatorParameters <.. HeavydynReport
MachineZoneCreatorParameters <|-- HeavydynZoneCreatorParameters

class HeavydynZone {
  <<interface>>

}



class MaxidynZoneCreatorParameters {
  <<interface>>
  report: MaxidynReport
}
MaxidynZoneCreatorParameters <.. MaxidynReport
MachineZoneCreatorParameters <|-- MaxidynZoneCreatorParameters

class MaxidynZone {
  <<interface>>

}



class MinidynZoneCreatorParameters {
  <<interface>>
  report: MinidynReport
}
MinidynZoneCreatorParameters <.. MinidynReport
MachineZoneCreatorParameters <|-- MinidynZoneCreatorParameters

class MinidynZone {
  <<interface>>

}



class MachineZone {
  <<type>>
  HeavydynZone | MaxidynZone | MinidynZone
}
MachineZone <.. HeavydynZone
MachineZone <.. MaxidynZone
MachineZone <.. MinidynZone


class MachineZoneCreatorParameters {
  <<interface>>
  report: MachineReport
}
MachineZoneCreatorParameters <.. MachineReport


class ExcelData {
  <<type>>
  string | number | boolean
}



class ExcelFlatData {
  <<type>>
  string[] | number[] | boolean[]
}



class ExcelJson {
  <<interface>>
  [key: string]: ExcelData | ExcelFlatData
}
ExcelJson <.. ExcelData
ExcelJson <.. ExcelFlatData


class FlatDataJson {
  <<interface>>
  [key: string]: ExcelFlatData
}
FlatDataJson <.. ExcelFlatData


class Exporter {
  <<interface>>
  name: string
  export: #40;...args: any[]#41; =#62; Promise#60;File#62;
}



class AnyExporter {
  <<type>>
  | MachineExporter   | HeavydynExporter   | MaxidynExporter   | MinidynExporter
}
AnyExporter <.. MachineExporter
AnyExporter <.. HeavydynExporter
AnyExporter <.. MaxidynExporter
AnyExporter <.. MinidynExporter


class MachineExporter {
  <<interface>>
  export: #40;project: MachineProject#41; =#62; Promise#60;File#62;
}

Exporter <|-- MachineExporter

class HeavydynExporter {
  <<interface>>
  export: #40;project: HeavydynProject#41; =#62; Promise#60;File#62;
}

Exporter <|-- HeavydynExporter

class MaxidynExporter {
  <<interface>>
  export: #40;project: MaxidynProject#41; =#62; Promise#60;File#62;
}

Exporter <|-- MaxidynExporter

class MinidynExporter {
  <<interface>>
  export: #40;project: MinidynProject#41; =#62; Promise#60;File#62;
}

Exporter <|-- MinidynExporter

class ImpactData {
  <<interface>>
  load: number[]
  displacement: number[][]
}



class LngLat {
  <<interface>>
  lng: number
  lat: number
}



class XYCoord {
  <<interface>>
  x: number
  y: number
}



class SelectableList~T, L~ {
  <<interface>>
  selected: T | null
  list: L
  selectIndex: #40;index: number | null#41; =#62; void
  toJSON: #60;TJSON, LJSON extends TJSON[] = TJSON[]#62;#40;     transform: #40;value: T#41; =#62; LJSON[number]   #41; =#62; JSONSelectableList#60;TJSON, LJSON#62;
}



class DeepRequired~T~ {
  <<type>>
  #123;   [K in keyof T]: Required#60;DeepRequired#60;T[K]#62;#62; #125;
}
DeepRequired~T~ <.. DeepRequired~T~


class Store {
  <<interface>>
  projects: SelectableList#60;MachineProject#62;
  map: mapboxgl.Map | null
  updateAvailable: boolean
  save: #40;key: StoreKeys, value: StoreSaveableTypes#41; =#62; void
}
Store <.. SelectableList~T, L~
Store <.. MachineProject


class StoreKeys {
  <<type>>
  Exclude#60;keyof Store, 'save' | 'updateAvailable'#62;
}
StoreKeys <.. Store


class StoreTypes {
  <<type>>
  Store[keyof Store]
}
StoreTypes <.. Store


class StoreSaveableTypes {
  <<type>>
  Extract#60;   StoreTypes,   string[] | number[] | boolean[] | string | number | boolean | null #62;
}
StoreSaveableTypes <.. StoreTypes


